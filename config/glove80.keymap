/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

// layers
#define layer_Base 0
#define layer_Lower 1
#define layer_Magic 2
#define layer_Gaming 3

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to
        layer_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo LOWER>, <&to LOWER>;
        };
    };

    macros {
        bt_0: bt_profile_macro_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_Base {
            bindings = <
               &kp F1    &kp F2   &kp F3       &kp F4       &kp F5                                                                                   &kp F6     &kp F7    &kp F8     &kp F9    &kp F10
            &kp GRAVE    &kp N1   &kp N2       &kp N3       &kp N4  &kp N5                                                                 &kp N6    &kp N7     &kp N8    &kp N9     &kp N0   &kp BSLH
              &kp TAB     &kp Q    &kp W        &kp E        &kp R   &kp T                                                                  &kp Y     &kp U      &kp I     &kp O      &kp P   &kp FSLH
              &kp ESC     &kp A    &kp S        &kp D        &kp F   &kp G                                                                  &kp H     &kp J      &kp K     &kp L   &kp SEMI    &kp SQT
            &kp EQUAL     &kp Z    &kp X        &kp C        &kp V   &kp B  &kp LGUI  &kp LCTRL    &lower   &kp INS  &kp RCTRL  &kp RSHFT   &kp N     &kp M  &kp COMMA   &kp DOT  &kp MINUS  &kp PG_UP
 &magic LAYER_Magic 0  &kp HOME  &kp END  &kp KP_LPAR  &kp KP_RPAR          &backspace BSPC BSPC    &kp DEL  &kp LALT  &kp RALT    &kp RET  &kp SPACE          &kp LBRC   &kp RBRC  &kp LBKT   &kp RBKT  &kp PG_DN
            >;
        };
        
        layer_Lower {
            bindings = <
         &kp C_BRI_DN  &kp C_BRI_UP      &kp C_PREV      &kp C_NEXT         &kp C_PP                                                                                      &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP            &none  &kp PAUSE_BREAK
               &trans         &none           &none           &none            &none   &kp HOME                                                     &kp LEFT_PARENTHESIS  &kp KP_NUM  &kp KP_EQUAL  &kp KP_SLASH  &kp KP_MULTIPLY  &kp PRINTSCREEN
               &trans         &none           &none    &kp UP_ARROW            &none    &kp END                                                    &kp RIGHT_PARENTHESIS   &kp KP_N7     &kp KP_N8     &kp KP_N9     &kp KP_MINUS   &kp SCROLLLOCK
               &trans         &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PG_UP                                                              &kp PERCENT   &kp KP_N4     &kp KP_N5     &kp KP_N6      &kp KP_PLUS            &none
               &tog 3     &kp K_APP           &none         &kp F11          &kp F12  &kp PG_DN  &trans  &trans   &to 0  &trans  &trans  &kp RALT              &kp COMMA   &kp KP_N1     &kp KP_N2     &kp KP_N3     &kp KP_ENTER           &trans
 &magic LAYER_Magic 0      &kp CAPS         &kp INS         &kp F11          &kp F12             &trans  &trans  &trans  &trans  &trans    &trans                          &kp KP_N0     &kp KP_N0    &kp KP_DOT     &kp KP_ENTER           &trans
            >;
        };

        layer_Magic {
            bindings = <
  &bt BT_CLR            &none            &none            &none            &none                                                                                  &none   &none   &none   &none  &bt BT_CLR_ALL
       &none            &none            &none            &none            &none            &none                                                         &none   &none   &none   &none   &none           &none
       &none  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                         &none   &none   &none   &none   &none           &none
 &bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                         &none   &none   &none   &none   &none     &bootloader
  &sys_reset            &none            &none            &none            &none            &none   &bt_2   &bt_3         &none   &none   &none   &none   &none   &none   &none   &none   &none      &sys_reset
       &none            &none            &none            &none            &none                    &bt_0   &bt_1  &out OUT_USB   &none   &none   &none           &none   &none   &none   &none           &none
            >;
        };

        layer_Gaming {
            bindings = <
  &trans     &trans  &trans  &trans  &trans                                                                       &trans  &trans  &trans  &trans  &trans
 &kp ESC     &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                                                       &trans  &trans  &trans  &trans  &trans  &trans
  &trans    &kp TAB   &kp Q   &kp W   &kp E   &kp R                                                       &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &kp LSHFT   &kp A   &kp S   &kp D   &kp F                                                       &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &kp LCTRL   &kp Z   &kp X   &kp C   &kp V   &kp LGUI    &trans   &to 0  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &trans     &trans   &kp T   &kp G   &kp B          &kp SPACE  &kp LALT  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};